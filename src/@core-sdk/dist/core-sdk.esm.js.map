{"version":3,"file":"core-sdk.esm.js","sources":["../src/enums/ChainId.ts","../src/enums/ChainKey.ts","../src/enums/Rounding.ts","../src/enums/SolidityType.ts","../src/enums/TradeType.ts","../src/enums/TradeVersion.ts","../src/constants/addresses.ts","../src/constants/chain.ts","../src/constants/legacy.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Movr.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/entities/Native/Fuse.ts","../src/entities/Native/Telos.ts","../src/entities/Native/Glmr.ts","../src/entities/Native/Kava.ts","../src/entities/Native/Metis.ts","../src/entities/Native/opBNB.ts","../src/entities/Native/Boba.ts","../src/entities/Native/zetaTestnet.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/constants/solidity.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePairAddress.ts","../src/functions/math.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../src/functions/contract.ts","../src/functions/rebase.ts","../src/functions/validateSolidityTypeInstance.ts","../src/router.ts"],"sourcesContent":["export enum ChainId {\r\n  ETHEREUM = 1,\r\n  ROPSTEN = 3,\r\n  RINKEBY = 4,\r\n  ZETA_TESTNET = 7001,\r\n  OPBNB = 204,\r\n  GÖRLI = 5,\r\n  KOVAN = 42,\r\n  MATIC = 137,\r\n  MATIC_TESTNET = 80001,\r\n  FANTOM = 250,\r\n  FANTOM_TESTNET = 4002,\r\n  XDAI = 100,\r\n  BSC = 56,\r\n  BSC_TESTNET = 97,\r\n  ARBITRUM = 42161,\r\n  ARBITRUM_TESTNET = 79377087078960,\r\n  MOONBEAM_TESTNET = 1287,\r\n  AVALANCHE = 43114,\r\n  AVALANCHE_TESTNET = 43113,\r\n  HECO = 128,\r\n  HECO_TESTNET = 256,\r\n  HARMONY = 1666600000,\r\n  HARMONY_TESTNET = 1666700000,\r\n  OKEX = 66,\r\n  OKEX_TESTNET = 65,\r\n  CELO = 42220,\r\n  PALM = 11297108109,\r\n  PALM_TESTNET = 11297108099,\r\n  MOONRIVER = 1285,\r\n  FUSE = 122,\r\n  TELOS = 40,\r\n  HARDHAT = 31337,\r\n  MOONBEAM = 1284,\r\n  OPTIMISM = 10,\r\n  KAVA = 2222,\r\n  METIS = 1088,\r\n  ARBITRUM_NOVA = 42170,\r\n  BOBA_AVAX = 43288,\r\n}\r\n","export enum ChainKey {\r\n  ARBITRUM = 'arbitrum',\r\n  ARBITRUM_TESTNET = 'arbitrum-testnet',\r\n  AVALANCHE = 'avalanche',\r\n  ZETA_TESTNET = 'zeta-testnet',\r\n  OPBNB = 'op-bnb',\r\n  AVALANCHE_TESTNET = 'avalance-testnet',\r\n  BSC = 'bsc',\r\n  BSC_TESTNET = 'bsc-testnet',\r\n  CELO = 'celo',\r\n  ETHEREUM = 'ethereum',\r\n  FANTOM = 'fantom',\r\n  FANTOM_TESTNET = 'fantom-testnet',\r\n  FUSE = 'fuse',\r\n  GÖRLI = 'goerli',\r\n  HARMONY = 'harmony',\r\n  HARMONY_TESTNET = 'harmony-testnet',\r\n  HECO = 'heco',\r\n  HECO_TESTNET = 'heco-testnet',\r\n  KOVAN = 'kovan',\r\n  ROPSTEN = 'ropsten',\r\n  MATIC = 'polygon',\r\n  MATIC_TESTNET = 'matic-testnet',\r\n  MOONBEAM_TESTNET = 'moonbeam-testnet',\r\n  MOONRIVER = 'moonriver',\r\n  OKEX = 'okex',\r\n  OKEX_TESTNET = 'okex-testnet',\r\n  PALM = 'palm',\r\n  PALM_TESTNET = 'palm-testnet',\r\n  RINKEBY = 'rinkeby',\r\n  TELOS = 'telos',\r\n  XDAI = 'xdai',\r\n  MOONBEAM = 'moonbeam',\r\n  OPTIMISM = 'optimism',\r\n  KAVA = 'kava',\r\n  METIS = 'metis',\r\n  ARBITRUM_NOVA = 'arbitrum-nova',\r\n  BOBA_AVAX = 'boba-avax',\r\n}\r\n","export enum Rounding {\r\n  ROUND_DOWN = 0,\r\n  ROUND_HALF_UP = 1,\r\n  ROUND_UP = 3,\r\n}\r\n","export enum SolidityType {\r\n    uint8 = 'uint8',\r\n    uint256 = 'uint256',\r\n}","export enum TradeType {\r\n  EXACT_INPUT,\r\n  EXACT_OUTPUT,\r\n}\r\n","export enum TradeVersion {\r\n  V2TRADE,\r\n  V3TRADE,\r\n}\r\n","import { AddressMap } from '../types'\r\nimport { ChainId } from '../enums'\r\n\r\nexport const SUSHI_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n  [ChainId.ROPSTEN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.RINKEBY]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.GÖRLI]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.KOVAN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.FANTOM]: '0xae75A438b2E0cB8Bb01Ec1E1e376De11D44477CC',\r\n  [ChainId.MATIC]: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\r\n  [ChainId.XDAI]: '0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE',\r\n  [ChainId.BSC]: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n  [ChainId.ARBITRUM]: '0xd4d42F0b6DEF4CE0383636770eF773390d85c61A',\r\n  [ChainId.AVALANCHE]: '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76',\r\n  [ChainId.OPBNB]: '',\r\n  [ChainId.ZETA_TESTNET]: '',\r\n  [ChainId.HECO]: '0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5',\r\n  [ChainId.HARMONY]: '0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A',\r\n  [ChainId.OKEX]: '0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: '',\r\n  [ChainId.MOONRIVER]: '0xf390830DF829cf22c53c8840554B98eafC5dCBc2',\r\n  [ChainId.CELO]: '0x29dFce9c22003A4999930382Fd00f9Fd6133Acd1',\r\n  [ChainId.TELOS]: '0x922D641a426DcFFaeF11680e5358F34d97d112E1',\r\n  [ChainId.FUSE]: '0x90708b20ccC1eb95a4FA7C8b18Fd2C22a0Ff9E78',\r\n  [ChainId.MOONBEAM]: '0x2C78f1b70Ccf63CDEe49F9233e9fAa99D43AA07e',\r\n  [ChainId.KAVA]: '0x7C598c96D02398d89FbCb9d41Eab3DF0C16F227D',\r\n  [ChainId.METIS]: '0x17Ee7E4dA37B01FC1bcc908fA63DF343F23B4B7C',\r\n}\r\n\r\nexport const USDC_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n  [ChainId.ROPSTEN]: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\r\n  [ChainId.KOVAN]: '0xb7a4F3E9097C08dA09517b5aB877F7a917224ede',\r\n  [ChainId.MATIC]: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n  [ChainId.MATIC_TESTNET]: '0x742DfA5Aa70a8212857966D491D67B09Ce7D6ec7',\r\n  [ChainId.FANTOM]: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\r\n  [ChainId.BSC]: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n  [ChainId.HARMONY]: '0x985458E523dB3d53125813eD68c274899e9DfAb4',\r\n  [ChainId.HECO]: '0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B',\r\n  [ChainId.OKEX]: '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85',\r\n  [ChainId.XDAI]: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n  [ChainId.ARBITRUM]: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',\r\n  [ChainId.AVALANCHE]: '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',\r\n  [ChainId.MOONRIVER]: '0xE3F5a90F9cb311505cd691a46596599aA1A0AD7D',\r\n  [ChainId.CELO]: '0xef4229c8c3250C675F21BCefa42f58EfbfF6002a',\r\n  [ChainId.TELOS]: '0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b',\r\n  [ChainId.FUSE]: '0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5',\r\n  [ChainId.MOONBEAM]: '0x8f552a71EFE5eeFc207Bf75485b356A0b3f01eC9',\r\n  [ChainId.OPTIMISM]: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n  [ChainId.KAVA]: '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f',\r\n  [ChainId.METIS]: '0xEA32A96608495e54156Ae48931A7c20f0dcc1a21',\r\n  [ChainId.ARBITRUM_NOVA]: '0x750ba8b76187092B0D1E87E28daaf484d1b5273b',\r\n}\r\n\r\nexport const USD_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: USDC_ADDRESS[ChainId.ETHEREUM],\r\n  [ChainId.ROPSTEN]: USDC_ADDRESS[ChainId.ROPSTEN],\r\n  [ChainId.KOVAN]: USDC_ADDRESS[ChainId.KOVAN],\r\n  [ChainId.MATIC]: USDC_ADDRESS[ChainId.MATIC],\r\n  [ChainId.MATIC_TESTNET]: USDC_ADDRESS[ChainId.MATIC_TESTNET],\r\n  [ChainId.FANTOM]: USDC_ADDRESS[ChainId.FANTOM],\r\n  [ChainId.BSC]: USDC_ADDRESS[ChainId.BSC],\r\n  [ChainId.HARMONY]: USDC_ADDRESS[ChainId.HARMONY],\r\n  [ChainId.HECO]: USDC_ADDRESS[ChainId.HECO],\r\n  [ChainId.OKEX]: USDC_ADDRESS[ChainId.OKEX],\r\n  [ChainId.XDAI]: USDC_ADDRESS[ChainId.XDAI],\r\n  [ChainId.ARBITRUM]: USDC_ADDRESS[ChainId.ARBITRUM],\r\n  [ChainId.AVALANCHE]: USDC_ADDRESS[ChainId.AVALANCHE],\r\n  [ChainId.MOONRIVER]: USDC_ADDRESS[ChainId.MOONRIVER],\r\n  [ChainId.CELO]: '0x765DE816845861e75A25fCA122bb6898B8B1282a',\r\n  [ChainId.TELOS]: USDC_ADDRESS[ChainId.TELOS],\r\n  [ChainId.FUSE]: USDC_ADDRESS[ChainId.FUSE],\r\n  [ChainId.MOONBEAM]: USDC_ADDRESS[ChainId.MOONBEAM],\r\n  [ChainId.OPTIMISM]: USDC_ADDRESS[ChainId.OPTIMISM],\r\n  [ChainId.KAVA]: USDC_ADDRESS[ChainId.KAVA],\r\n  [ChainId.METIS]: USDC_ADDRESS[ChainId.METIS],\r\n  [ChainId.ARBITRUM_NOVA]: USDC_ADDRESS[ChainId.ARBITRUM_NOVA],\r\n}\r\n\r\nexport const WETH9_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\r\n  [ChainId.ROPSTEN]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\r\n  [ChainId.RINKEBY]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\r\n  [ChainId.GÖRLI]: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\r\n  [ChainId.KOVAN]: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\r\n  [ChainId.OPBNB]: '0x4200000000000000000000000000000000000006',\r\n  [ChainId.ZETA_TESTNET]: '0x5f0b1a82749cb4e2278ec87f8bf6b618dc71a8bf',\r\n  [ChainId.ARBITRUM]: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\r\n  [ChainId.ARBITRUM_TESTNET]: '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\r\n  [ChainId.BSC]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n  [ChainId.FANTOM]: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\r\n  [ChainId.MATIC]: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\r\n  [ChainId.MATIC_TESTNET]: '0x714550C2C1Ea08688607D86ed8EeF4f5E4F22323',\r\n  [ChainId.OKEX]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n  [ChainId.HECO]: '0x64FF637fB478863B7468bc97D30a5bF3A428a1fD',\r\n  [ChainId.HARMONY]: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\r\n  [ChainId.XDAI]: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\r\n  [ChainId.AVALANCHE]: '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB',\r\n  [ChainId.PALM]: '0x726138359C17F1E56bA8c4F737a7CAf724F6010b',\r\n  [ChainId.CELO]: '0x122013fd7dF1C6F636a5bb8f03108E876548b455',\r\n  [ChainId.MOONRIVER]: '0x639A647fbe20b6c8ac19E48E2de44ea792c62c5C',\r\n  [ChainId.TELOS]: '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f',\r\n  [ChainId.FUSE]: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',\r\n  [ChainId.MOONBEAM]: '0x30D2a9F5FDf90ACe8c17952cbb4eE48a55D916A7',\r\n  [ChainId.OPTIMISM]: '0x4200000000000000000000000000000000000006',\r\n  [ChainId.KAVA]: '0xE3F5a90F9cb311505cd691a46596599aA1A0AD7D',\r\n  [ChainId.METIS]: '0x420000000000000000000000000000000000000A',\r\n  [ChainId.ARBITRUM_NOVA]: '0x722E8BdD2ce80A4422E880164f2079488e115365',\r\n}\r\n\r\nexport const WNATIVE_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: WETH9_ADDRESS[ChainId.ETHEREUM],\r\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\r\n  [ChainId.OPBNB]: WETH9_ADDRESS[ChainId.OPBNB],\r\n  [ChainId.ZETA_TESTNET]: WETH9_ADDRESS[ChainId.ZETA_TESTNET],\r\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\r\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\r\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\r\n  [ChainId.OPTIMISM]: WETH9_ADDRESS[ChainId.OPTIMISM],\r\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\r\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\r\n  [ChainId.FANTOM]: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\r\n  [ChainId.FANTOM_TESTNET]: '0xf1277d1Ed8AD466beddF92ef448A132661956621',\r\n  [ChainId.MATIC]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\r\n  [ChainId.MATIC_TESTNET]: '0x5B67676a984807a212b1c59eBFc9B3568a474F0a',\r\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\r\n  [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n  [ChainId.BSC_TESTNET]: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\r\n  [ChainId.MOONBEAM_TESTNET]: '0x372d0695E75563D9180F8CE31c9924D7e8aaac47',\r\n  [ChainId.AVALANCHE]: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\r\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\r\n  [ChainId.HECO]: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n  [ChainId.HECO_TESTNET]: '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\r\n  [ChainId.HARMONY]: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\r\n  [ChainId.HARMONY_TESTNET]: '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\r\n  [ChainId.OKEX]: '0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15',\r\n  [ChainId.OKEX_TESTNET]: '0x2219845942d28716c0F7C605765fABDcA1a7d9E0',\r\n  [ChainId.PALM]: '0xF98cABF0a963452C5536330408B2590567611a71',\r\n  [ChainId.CELO]: '0x471EcE3750Da237f93B8E339c536989b8978a438',\r\n  [ChainId.MOONRIVER]: '0xf50225a84382c74CbdeA10b0c176f71fc3DE0C4d',\r\n  [ChainId.FUSE]: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',\r\n  [ChainId.TELOS]: '0xD102cE6A4dB07D247fcc28F366A623Df0938CA9E',\r\n  [ChainId.MOONBEAM]: '0xAcc15dC74880C9944775448304B263D191c6077F',\r\n  [ChainId.KAVA]: '0xc86c7C0eFbd6A49B35E8714C5f59D99De09A225b',\r\n  [ChainId.METIS]: '0x75cb093E4D61d2A2e65D8e0BBb01DE8d89b53481',\r\n  [ChainId.ARBITRUM_NOVA]: WETH9_ADDRESS[ChainId.ARBITRUM_NOVA],\r\n  [ChainId.BOBA_AVAX]: '0x26c319B7B2cF823365414d082698C8ac90cbBA63',\r\n}\r\n\r\nexport const DAI_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n  [ChainId.ROPSTEN]: '0xc2118d4d90b274016cB7a54c03EF52E6c537D957',\r\n  [ChainId.KOVAN]: '0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa',\r\n  [ChainId.MATIC]: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n  [ChainId.FANTOM]: '0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E',\r\n  [ChainId.BSC]: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n  [ChainId.HARMONY]: '0xEf977d2f931C1978Db5F6747666fa1eACB0d0339',\r\n  [ChainId.HECO]: '0x3D760a45D0887DFD89A2F5385a236B29Cb46ED2a',\r\n  [ChainId.OKEX]: '0x21cDE7E32a6CAF4742d00d44B07279e7596d26B9',\r\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\r\n  [ChainId.ARBITRUM]: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n  [ChainId.AVALANCHE]: '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',\r\n  [ChainId.CELO]: '0x90Ca507a5D4458a4C6C6249d186b6dCb02a5BCCd',\r\n  [ChainId.MOONRIVER]: '0x80A16016cC4A2E6a2CACA8a4a498b1699fF0f844',\r\n  // [ChainId.TELOS]: '',\r\n  [ChainId.FUSE]: '0x94Ba7A27c7A95863d1bdC7645AC2951E0cca06bA',\r\n  [ChainId.MOONBEAM]: '0xc234A67a4F840E61adE794be47de455361b52413',\r\n  [ChainId.OPTIMISM]: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n  [ChainId.KAVA]: '0x765277EebeCA2e31912C9946eAe1021199B39C61',\r\n  [ChainId.METIS]: '0x4c078361FC9BbB78DF910800A991C7c3DD2F6ce0',\r\n  [ChainId.ARBITRUM_NOVA]: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n}\r\n\r\nexport const USDT_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n  [ChainId.ROPSTEN]: '0x110a13FC3efE6A245B50102D2d79B3E76125Ae83',\r\n  [ChainId.KOVAN]: '0x07de306FF27a2B630B1141956844eB1552B956B5',\r\n  [ChainId.MATIC]: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',\r\n  [ChainId.FANTOM]: '0x049d68029688eAbF473097a2fC38ef61633A3C7A',\r\n  [ChainId.BSC]: '0x55d398326f99059fF775485246999027B3197955',\r\n  [ChainId.HARMONY]: '0x3C2B8Be99c50593081EAA2A724F0B8285F5aba8f',\r\n  [ChainId.HECO]: '0xa71EdC38d189767582C38A3145b5873052c3e47a',\r\n  [ChainId.OKEX]: '0x382bB369d343125BfB2117af9c149795C6C65C50',\r\n  [ChainId.XDAI]: '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',\r\n  [ChainId.ARBITRUM]: '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9',\r\n  [ChainId.AVALANCHE]: '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',\r\n  [ChainId.CELO]: '0x88eeC49252c8cbc039DCdB394c0c2BA2f1637EA0',\r\n  [ChainId.MOONRIVER]: '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',\r\n  [ChainId.TELOS]: '0xeFAeeE334F0Fd1712f9a8cc375f427D9Cdd40d73',\r\n  [ChainId.FUSE]: '0xFaDbBF8Ce7D5b7041bE672561bbA99f79c532e10',\r\n  [ChainId.MOONBEAM]: '0x8e70cd5b4ff3f62659049e74b6649c6603a0e594',\r\n  [ChainId.OPTIMISM]: '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58',\r\n  [ChainId.KAVA]: '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',\r\n  [ChainId.METIS]: '0xbB06DCA3AE6887fAbF931640f67cab3e3a16F4dC',\r\n  [ChainId.ARBITRUM_NOVA]: '0xeD9d63a96c27f87B07115b56b2e3572827f21646',\r\n}\r\n\r\nexport const MIM_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3',\r\n  [ChainId.FANTOM]: '0x82f0B8B456c1A451378467398982d4834b6829c1',\r\n  [ChainId.BSC]: '0xfE19F0B51438fd612f6FD59C1dbB3eA319f433Ba',\r\n  [ChainId.ARBITRUM]: '0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A',\r\n  [ChainId.AVALANCHE]: '0x130966628846BFd36ff31a822705796e8cb8C18D',\r\n  [ChainId.MATIC]: '0x49a0400587A7F65072c87c4910449fDcC5c47242',\r\n  [ChainId.MOONRIVER]: '0x0caE51e1032e8461f4806e26332c030E34De3aDb',\r\n}\r\n\r\nexport const FRAX_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n  [ChainId.FANTOM]: '0xdc301622e621166BD8E82f2cA0A26c13Ad0BE355',\r\n  [ChainId.BSC]: '0x90C97F71E18723b0Cf0dfa30ee176Ab653E89F40',\r\n  [ChainId.ARBITRUM]: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n  [ChainId.AVALANCHE]: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n  [ChainId.MATIC]: '0x45c32fA6DF82ead1e2EF74d17b76547EDdFaFF89',\r\n  [ChainId.MOONRIVER]: '0x1A93B23281CC1CDE4C4741353F3064709A16197d',\r\n  [ChainId.MOONBEAM]: '0x322E86852e492a7Ee17f28a78c663da38FB33bfb',\r\n  [ChainId.HARMONY]: '0xFa7191D292d5633f702B0bd7E3E3BcCC0e633200',\r\n}\r\n\r\nexport const FACTORY_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\r\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.ZETA_TESTNET]: '0x7d744D7e73D11Ea268B286198BFdEA9067B10218',\r\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.OPBNB]: '0xa7408904620F14C4FEB898c8c20c2189636d4009',\r\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.FANTOM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.ARBITRUM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\r\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\r\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.HARMONY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.HARMONY_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.OKEX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.OKEX_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.CELO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.PALM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.PALM_TESTNET]: '',\r\n  [ChainId.MOONRIVER]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.FUSE]: '0x43eA90e2b786728520e4f930d2A71a477BF2737C',\r\n  [ChainId.TELOS]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.MOONBEAM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.ARBITRUM_NOVA]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.BOBA_AVAX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n}\r\n\r\nexport const ROUTER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\r\n  [ChainId.RINKEBY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.OPBNB]: '0xEE5128f6c8e2cdfb1e5f2A01fe470aCe680aF85c',\r\n  [ChainId.ZETA_TESTNET]: '0x5A2523b109727e439Ca0e566466f5a2915F996CA',\r\n  [ChainId.ROPSTEN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.GÖRLI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.KOVAN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.FANTOM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.MATIC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.XDAI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.BSC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.BSC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.ARBITRUM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef',\r\n  [ChainId.AVALANCHE]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.AVALANCHE_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HECO]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HECO_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HARMONY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HARMONY_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.OKEX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.OKEX_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.CELO]: '0x1421bDe4B10e8dd459b3BCb598810B1337D56842',\r\n  [ChainId.PALM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.PALM_TESTNET]: '',\r\n  [ChainId.MOONRIVER]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.FUSE]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\r\n  [ChainId.TELOS]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.MOONBEAM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.ARBITRUM_NOVA]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.BOBA_AVAX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n}\r\n\r\nexport const MASTERCHEF_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n  [ChainId.ROPSTEN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.RINKEBY]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.GÖRLI]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.KOVAN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n}\r\n\r\nexport const BAR_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272',\r\n  [ChainId.ROPSTEN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.RINKEBY]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.GÖRLI]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.KOVAN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n}\r\n\r\nexport const MAKER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50',\r\n  [ChainId.ROPSTEN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.RINKEBY]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.GÖRLI]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.KOVAN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n}\r\n\r\nexport const TIMELOCK_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1',\r\n}\r\n\r\nexport const BENTOBOX_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.ROPSTEN]: '0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF',\r\n  [ChainId.RINKEBY]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.GÖRLI]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.KOVAN]: '0xc381a85ed7C7448Da073b7d6C9d4cBf1Cbf576f0',\r\n  [ChainId.FANTOM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.MATIC]: '0x0319000133d3AdA02600f0875d2cf03D442C3367',\r\n  [ChainId.MATIC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.XDAI]: '0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324',\r\n  [ChainId.BSC]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.BSC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.ARBITRUM]: '0x74c764D41B77DBbb4fe771daB1939B00b146894A',\r\n  [ChainId.AVALANCHE]: '0x0711B6026068f736bae6B213031fCE978D48E026',\r\n  [ChainId.HECO]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.CELO]: '0x0711B6026068f736bae6B213031fCE978D48E026',\r\n  [ChainId.HARMONY]: '0xA28cfF72b04f83A7E3f912e6ad34d5537708a2C2',\r\n  [ChainId.MOONBEAM]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.MOONRIVER]: '0x145d82bCa93cCa2AE057D1c6f26245d1b9522E6F',\r\n  [ChainId.OPTIMISM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.KAVA]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.METIS]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n}\r\n\r\nexport const KASHI_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.KOVAN]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.MATIC]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\r\n  [ChainId.XDAI]: '0x7a6DA9903d0a481F40b8336c1463487BC8C0407e',\r\n  [ChainId.BSC]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.ARBITRUM]: '0xa010eE0226cd071BeBd8919A1F675cAE1f1f5D3e',\r\n  [ChainId.AVALANCHE]: '0x513037395FA0C9c35E41f89189ceDfE3bD42fAdb',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n}\r\n\r\nexport const SUSHISWAP_SWAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x1766733112408b95239aD1951925567CB1203084',\r\n  [ChainId.MATIC]: '0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D',\r\n  [ChainId.XDAI]: '0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9',\r\n  [ChainId.BSC]: '0x1766733112408b95239aD1951925567CB1203084',\r\n  [ChainId.ARBITRUM]: '0x0bFcD5dD76218bF9e3BE8A1055f9e6D27E5745eb',\r\n  [ChainId.AVALANCHE]: '0x062eee8B38ab5E8ee3bc58CE505939db53E63785',\r\n  [ChainId.HECO]: '0x1766733112408b95239aD1951925567CB1203084',\r\n}\r\n\r\nexport const SUSHISWAP_MULTISWAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x545820d5Cc05248da112419fEfb18522c63C8e12',\r\n  [ChainId.KOVAN]: '0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf',\r\n  [ChainId.MATIC]: '0x73BE093B84c773fe8eE0f76DDc0829E45c215415',\r\n  [ChainId.XDAI]: '0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93',\r\n  [ChainId.BSC]: '0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c',\r\n  [ChainId.ARBITRUM]: '0xbe7D5968296843756109D42946D01195320922EF',\r\n  [ChainId.AVALANCHE]: '0xB7C8b5BFcd7212f034Be42a2aAb08b8773B76920',\r\n}\r\n\r\nexport const SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\r\n  [ChainId.KOVAN]: '0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE',\r\n  [ChainId.MATIC]: '0xDB6C4EDd9545d3b815dA85E6429B699c418886f9',\r\n  [ChainId.XDAI]: '0x07b6e34EeCF38B02e83b6B4702699717e298967E',\r\n  [ChainId.BSC]: '0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B',\r\n  [ChainId.ARBITRUM]: '0x860D841bfD1cfEf72A14B2b734005799F07dC7ED',\r\n  [ChainId.AVALANCHE]: '0x2c46217Fae90D302d1Fb5467ADA504bC2A84f448',\r\n}\r\n\r\nexport const PEGGED_ORACLE_ADDRESS = '0x6cbfbB38498Df0E1e7A4506593cDB02db9001564'\r\n\r\nexport const SUSHISWAP_TWAP_0_ORACLE_ADDRESS = '0x66F03B0d30838A3fee971928627ea6F59B236065'\r\n\r\nexport const SUSHISWAP_TWAP_1_ORACLE_ADDRESS = '0x0D51b575591F8f74a2763Ade75D3CDCf6789266f'\r\n\r\nexport const CHAINLINK_ORACLE_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.MATIC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.XDAI]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.BSC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.ARBITRUM]: '0xB2B5C26B6868be10fF77e4E233fD231ceB90162a',\r\n  [ChainId.AVALANCHE]: '0x43198B6fA5d89B88D2E072fA4841724571De5A59',\r\n}\r\n\r\nexport const BORING_HELPER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n  [ChainId.KOVAN]: '0x5bd6e4eFA335192FDA5D6B42a344ccA3d45894B8',\r\n  [ChainId.MATIC]: '0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd',\r\n  [ChainId.XDAI]: '0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F',\r\n  [ChainId.BSC]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n  [ChainId.ARBITRUM]: '0x9AF28d4f7Fa007686958c306BD4c8c52c2b615b8',\r\n  [ChainId.AVALANCHE]: '0xD18cA07a599bf5eBb9B7327871ad682F0b660748',\r\n  [ChainId.HECO]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n}\r\n\r\nexport const MINICHEF_ADDRESS: AddressMap = {\r\n  [ChainId.MATIC]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.XDAI]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.HARMONY]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\r\n  [ChainId.ARBITRUM]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\r\n  [ChainId.CELO]: '0x8084936982D089130e001b470eDf58faCA445008',\r\n  [ChainId.MOONRIVER]: '0x3dB01570D97631f69bbb0ba39796865456Cf89A5',\r\n  [ChainId.FUSE]: '0x182CD0C6F1FaEc0aED2eA83cd0e160c8Bd4cb063',\r\n  [ChainId.FANTOM]: '0xf731202A3cf7EfA9368C2d7bD613926f7A144dB5',\r\n  [ChainId.MOONBEAM]: '0x011E52E4E40CF9498c79273329E8827b21E2e581',\r\n  [ChainId.KAVA]: '0xf731202A3cf7EfA9368C2d7bD613926f7A144dB5',\r\n  [ChainId.METIS]: '0x1334c8e873E1cae8467156e2A81d1C8b566B2da1',\r\n}\r\n\r\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d',\r\n}\r\n\r\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n  [ChainId.GÖRLI]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n  [ChainId.ROPSTEN]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n  [ChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n}\r\n\r\nexport const ZAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\r\n  [ChainId.ROPSTEN]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\r\n}\r\n\r\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982',\r\n  [ChainId.ROPSTEN]: '0x84d1f7202e0e7dac211617017ca72a2cb5e2b955',\r\n}\r\n\r\nexport const MULTICALL2_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.ROPSTEN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.ZETA_TESTNET]: '0x1431b34DAd6c7b5A0e0E6FBe217567D2C3b54308',\r\n  [ChainId.RINKEBY]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.GÖRLI]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.KOVAN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.ARBITRUM]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.ARBITRUM_TESTNET]: '0xa501c031958F579dB7676fF1CE78AD305794d579',\r\n  [ChainId.CELO]: '0x9aac9048fC8139667D6a2597B902865bfdc225d3',\r\n  [ChainId.FANTOM]: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\r\n  [ChainId.MATIC]: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\r\n  [ChainId.XDAI]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\r\n  [ChainId.BSC]: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\r\n  [ChainId.AVALANCHE]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.HECO]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.HARMONY]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.OKEX]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\r\n  [ChainId.PALM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.MOONRIVER]: '0x270f2F35bED92B7A59eA5F08F6B3fd34c8D9D9b5',\r\n  [ChainId.FUSE]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.TELOS]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.MOONBEAM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n}\r\n\r\nexport const BALANCE_FETCHER_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x386a4B75578C7843A6082EFe181D5d629236C047',\r\n  [ChainId.MATIC]: '0x06a846BA430Ed005bE60f8598B4C563dbaa6feF0',\r\n  [ChainId.AVALANCHE]: '0x4d4A0D45a98AE8EC25b359D93A088A87BC9eF70b',\r\n  [ChainId.XDAI]: '0x26DC4e2f63bad22BCdF99087E40bd5B6c456e69d',\r\n  [ChainId.BSC]: '0x9d6c13Bc5269E553C4697767b4c267FB33Dd8d1A',\r\n  [ChainId.ARBITRUM]: '0x0e9b6C08Fe70Aac8fd08a74a076c2B1C9f7c7d14',\r\n  [ChainId.HECO]: '0x4d4A0D45a98AE8EC25b359D93A088A87BC9eF70b',\r\n  [ChainId.KOVAN]: '0x980bE39AC44E5500f0f16bA692084A6E44e6549A',\r\n}\r\n\r\nexport const MULTISIG_ADDRESS: AddressMap = {\r\n  [ChainId.ETHEREUM]: '0x19B3Eb3Af5D93b77a5619b047De0EED7115A19e7',\r\n  // [ChainId.ROPSTEN]: '',\r\n  // [ChainId.RINKEBY]: '',\r\n  // [ChainId.GÖRLI]: '',\r\n  // [ChainId.KOVAN]: '',\r\n  [ChainId.FANTOM]: '0xF9E7d4c6d36ca311566f46c81E572102A2DC9F52',\r\n  [ChainId.MATIC]: '0x850a57630A2012B2494779fBc86bBc24F2a7baeF',\r\n  [ChainId.XDAI]: '0xc375411C6597F692Add6a7a3AD5b3C38626B0F26',\r\n  [ChainId.BSC]: '0xc6fD91aD4919Fd91e2c84077ba648092cB499638',\r\n  [ChainId.ARBITRUM]: '0x978982772b8e4055B921bf9295c0d74eB36Bc54e',\r\n  [ChainId.AVALANCHE]: '0x09842Ce338647906B686aBB3B648A6457fbB25DA',\r\n  // [ChainId.HECO]: '',\r\n  [ChainId.HARMONY]: '0x30af69A3f4a6f266961313Ce0943719dF4A8AA10',\r\n  // [ChainId.OKEX]: '',\r\n  // [ChainId.OKEX_TESTNET]: '',\r\n  // [ChainId.PALM]: '',\r\n  // [ChainId.PALM_TESTNET]: '',\r\n  [ChainId.MOONRIVER]: '0x939f7E76cc515cc296dD3ce362D9a52e148A7D5f',\r\n  [ChainId.CELO]: '0x751b01Fa14fD9640a1DF9014e2D0f3a03A198b81',\r\n  // [ChainId.TELOS]: '',\r\n  [ChainId.FUSE]: '0x33b6beb37837459Ee84a1Ffed2C6a4ca22e5F316',\r\n}\r\n","import { ChainId } from '../enums'\r\nimport { ChainKey } from '../enums'\r\n\r\nexport const CHAIN_KEY: { [chainId: number]: ChainKey } = {\r\n  [ChainId.ETHEREUM]: ChainKey.ETHEREUM,\r\n  [ChainId.ROPSTEN]: ChainKey.ROPSTEN,\r\n  [ChainId.RINKEBY]: ChainKey.RINKEBY,\r\n  [ChainId.OPBNB]: ChainKey.OPBNB,\r\n  [ChainId.ZETA_TESTNET]: ChainKey.ZETA_TESTNET,\r\n  [ChainId.GÖRLI]: ChainKey.GÖRLI,\r\n  [ChainId.KOVAN]: ChainKey.KOVAN,\r\n  [ChainId.MATIC]: ChainKey.MATIC,\r\n  [ChainId.MATIC_TESTNET]: ChainKey.MATIC_TESTNET,\r\n  [ChainId.FANTOM]: ChainKey.FANTOM,\r\n  [ChainId.FANTOM_TESTNET]: ChainKey.FANTOM_TESTNET,\r\n  [ChainId.XDAI]: ChainKey.XDAI,\r\n  [ChainId.BSC]: ChainKey.BSC,\r\n  [ChainId.BSC_TESTNET]: ChainKey.BSC_TESTNET,\r\n  [ChainId.ARBITRUM]: ChainKey.ARBITRUM,\r\n  [ChainId.ARBITRUM_TESTNET]: ChainKey.ARBITRUM_TESTNET,\r\n  [ChainId.MOONBEAM_TESTNET]: ChainKey.MOONBEAM_TESTNET,\r\n  [ChainId.AVALANCHE]: ChainKey.AVALANCHE,\r\n  [ChainId.AVALANCHE_TESTNET]: ChainKey.AVALANCHE_TESTNET,\r\n  [ChainId.HECO]: ChainKey.HECO,\r\n  [ChainId.HECO_TESTNET]: ChainKey.HECO_TESTNET,\r\n  [ChainId.HARMONY]: ChainKey.HARMONY,\r\n  [ChainId.HARMONY_TESTNET]: ChainKey.HARMONY_TESTNET,\r\n  [ChainId.OKEX]: ChainKey.OKEX,\r\n  [ChainId.OKEX_TESTNET]: ChainKey.OKEX_TESTNET,\r\n  [ChainId.CELO]: ChainKey.CELO,\r\n  [ChainId.PALM]: ChainKey.PALM,\r\n  [ChainId.PALM_TESTNET]: ChainKey.PALM_TESTNET,\r\n  [ChainId.MOONRIVER]: ChainKey.MOONRIVER,\r\n  [ChainId.FUSE]: ChainKey.FUSE,\r\n  [ChainId.TELOS]: ChainKey.TELOS,\r\n  [ChainId.MOONBEAM]: ChainKey.MOONBEAM,\r\n  [ChainId.OPTIMISM]: ChainKey.OPTIMISM,\r\n  [ChainId.KAVA]: ChainKey.KAVA,\r\n  [ChainId.METIS]: ChainKey.METIS,\r\n  [ChainId.ARBITRUM_NOVA]: ChainKey.ARBITRUM_NOVA,\r\n  [ChainId.BOBA_AVAX]: ChainKey.BOBA_AVAX,\r\n}\r\n","import { ChainId } from '../enums/ChainId'\r\n\r\nexport const INIT_CODE_HASH: { [chainId: number]: string } = {\r\n  [ChainId.ETHEREUM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.OPBNB]: '0x1937327f8450c08e13c394fdf74a14214c38e7dd4c42f26872824e8f78e08423',\r\n  [ChainId.ZETA_TESTNET]: '0x6672ab79d3c47fb68fdb64f1f80dfa6f6acea5f2617185cb19f624742f60bbc9',\r\n  [ChainId.ROPSTEN]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.RINKEBY]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.GÖRLI]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.KOVAN]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.FANTOM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.MATIC]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.MATIC_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.XDAI]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.BSC]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.BSC_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.ARBITRUM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.MOONBEAM_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.AVALANCHE]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.AVALANCHE_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.HECO]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.HECO_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.HARMONY]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.HARMONY_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.OKEX]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.OKEX_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.CELO]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.PALM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.MOONRIVER]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.FUSE]: '0x1901958ef8b470f2c0a3875a79ee0bd303866d85102c0f1ea820d317024d50b5',\r\n  [ChainId.TELOS]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.MOONBEAM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.ARBITRUM_NOVA]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n  [ChainId.BOBA_AVAX]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\r\n}\r\n","import { Currency } from './Currency'\r\nimport { Token } from './Token'\r\nimport invariant from 'tiny-invariant'\r\n\r\n/**\r\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\r\n */\r\nexport abstract class AbstractCurrency {\r\n  /**\r\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\r\n   */\r\n  public abstract readonly isNative: boolean\r\n  /**\r\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\r\n   */\r\n  public abstract readonly isToken: boolean\r\n\r\n  /**\r\n   * The chain ID on which this currency resides\r\n   */\r\n  public readonly chainId: number\r\n  /**\r\n   * The decimals used in representing currency amounts\r\n   */\r\n  public readonly decimals: number\r\n  /**\r\n   * The symbol of the currency, i.e. a short textual non-unique identifier\r\n   */\r\n  public readonly symbol?: string\r\n  /**\r\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\r\n   */\r\n  public readonly name?: string\r\n\r\n  /**\r\n   * Constructs an instance of the base class `BaseCurrency`.\r\n   * @param chainId the chain ID on which this currency resides\r\n   * @param decimals decimals of the currency\r\n   * @param symbol symbol of the currency\r\n   * @param name of the currency\r\n   */\r\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\r\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\r\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\r\n\r\n    this.chainId = chainId\r\n    this.decimals = decimals\r\n    this.symbol = symbol\r\n    this.name = name\r\n  }\r\n\r\n  /**\r\n   * Returns whether this currency is functionally equivalent to the other currency\r\n   * @param other the other currency\r\n   */\r\n  public abstract equals(other: Currency): boolean\r\n\r\n  /**\r\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\r\n   * implement this to be used in Uniswap\r\n   */\r\n  public abstract get wrapped(): Token\r\n}\r\n","import { AbstractCurrency } from './AbstractCurrency'\r\n\r\n/**\r\n * Represents the native currency of the chain on which it resides, e.g.\r\n */\r\nexport abstract class NativeCurrency extends AbstractCurrency {\r\n  public readonly isNative: true = true\r\n  public readonly isToken: false = false\r\n}\r\n","import { getAddress } from '@ethersproject/address'\r\nimport invariant from 'tiny-invariant'\r\nimport warning from 'tiny-warning'\r\n\r\n// warns if addresses are not checksummed\r\nexport function validateAndParseAddress(address: string): string {\r\n  try {\r\n    const checksummedAddress = getAddress(address)\r\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\r\n    return checksummedAddress\r\n  } catch (error) {\r\n    invariant(false, `${address} is not a valid address.`)\r\n  }\r\n}\r\n","import { AbstractCurrency } from './AbstractCurrency'\r\nimport { Currency } from './Currency'\r\nimport invariant from 'tiny-invariant'\r\nimport { validateAndParseAddress } from '../functions/validateAndParseAddress'\r\n\r\n/**\r\n * Represents an ERC20 token with a unique address and some metadata.\r\n */\r\nexport class Token extends AbstractCurrency {\r\n  public readonly chainId: number\r\n  public readonly address: string\r\n\r\n  public readonly isNative: false = false\r\n  public readonly isToken: true = true\r\n\r\n  public constructor(chainId: number, address: string, decimals: number, symbol?: string, name?: string) {\r\n    super(chainId, decimals, symbol, name)\r\n    this.chainId = chainId\r\n    this.address = validateAndParseAddress(address)\r\n  }\r\n\r\n  /**\r\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n   * @param other other token to compare\r\n   */\r\n  public equals(other: Currency): boolean {\r\n    return other.isToken && this.chainId === other.chainId && this.address === other.address\r\n  }\r\n\r\n  /**\r\n   * Returns true if the address of this token sorts before the address of the other token\r\n   * @param other other token to compare\r\n   * @throws if the tokens have the same address\r\n   * @throws if the tokens are on different chains\r\n   */\r\n  public sortsBefore(other: Token): boolean {\r\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\r\n    invariant(this.address !== other.address, 'ADDRESSES')\r\n    return this.address.toLowerCase() < other.address.toLowerCase()\r\n  }\r\n\r\n  /**\r\n   * Return this token, which does not need to be wrapped\r\n   */\r\n  public get wrapped(): Token {\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Return logo\r\n   */\r\n  // public get logo(): string | null {\r\n  //   return this.chainId in CHAIN_KEY ? `https://raw.githubusercontent.com/sushiswap/logos/main/network/${CHAIN_KEY[this.chainId]}/.jpg` : undefined\r\n  // }\r\n}\r\n\r\n/**\r\n * Compares two currencies for equality\r\n */\r\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\r\n  if (currencyA instanceof Token && currencyB instanceof Token) {\r\n    return currencyA.equals(currencyB)\r\n  } else if (currencyA instanceof Token) {\r\n    return false\r\n  } else if (currencyB instanceof Token) {\r\n    return false\r\n  } else {\r\n    return currencyA === currencyB\r\n  }\r\n}\r\n","import { ChainTokenMap, TokenMap } from '../types'\r\nimport { SUSHI_ADDRESS, USDC_ADDRESS, USD_ADDRESS, WETH9_ADDRESS, WNATIVE_ADDRESS } from './addresses'\r\n\r\nimport { ChainId } from '../enums'\r\nimport { Token } from '../entities/Token'\r\n\r\nexport const USDC: TokenMap = {\r\n  [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, USDC_ADDRESS[ChainId.ETHEREUM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, USDC_ADDRESS[ChainId.ROPSTEN], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, USDC_ADDRESS[ChainId.KOVAN], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.MATIC_TESTNET]: new Token(ChainId.MATIC_TESTNET, USDC_ADDRESS[ChainId.MATIC_TESTNET], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, USDC_ADDRESS[ChainId.FANTOM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, USDC_ADDRESS[ChainId.HARMONY], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, USDC_ADDRESS[ChainId.HECO], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, USDC_ADDRESS[ChainId.OKEX], 18, 'USDC', 'USD Coin'),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, USDC_ADDRESS[ChainId.XDAI], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, USDC_ADDRESS[ChainId.ARBITRUM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.MOONRIVER]: new Token(ChainId.MOONRIVER, USDC_ADDRESS[ChainId.MOONRIVER], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, USDC_ADDRESS[ChainId.AVALANCHE], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.FUSE]: new Token(ChainId.FUSE, USDC_ADDRESS[ChainId.FUSE], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.TELOS]: new Token(ChainId.TELOS, USDC_ADDRESS[ChainId.TELOS], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, USDC_ADDRESS[ChainId.MOONBEAM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.OPTIMISM]: new Token(ChainId.OPTIMISM, USDC_ADDRESS[ChainId.OPTIMISM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.KAVA]: new Token(ChainId.KAVA, USDC_ADDRESS[ChainId.KAVA], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.METIS]: new Token(ChainId.METIS, USDC_ADDRESS[ChainId.METIS], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.ARBITRUM_NOVA]: new Token(ChainId.ARBITRUM_NOVA, USDC_ADDRESS[ChainId.ARBITRUM_NOVA], 6, 'USDC', 'USD Coin'),\r\n}\r\n\r\nexport const USD: TokenMap = {\r\n  ...USDC,\r\n  [ChainId.CELO]: new Token(ChainId.CELO, USD_ADDRESS[ChainId.CELO], 18, 'cUSD', 'Celo Dollar'),\r\n}\r\n\r\nexport const WETH9: TokenMap = {\r\n  [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, WETH9_ADDRESS[ChainId.ETHEREUM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.OPBNB]: new Token(ChainId.OPBNB, WETH9_ADDRESS[ChainId.OPBNB], 18, 'WBNB', 'Wrapped BNB'),\r\n  [ChainId.ZETA_TESTNET]: new Token(ChainId.ZETA_TESTNET, WETH9_ADDRESS[ChainId.ZETA_TESTNET], 18, 'WZETA', 'Wrapped ZETA'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, WETH9_ADDRESS[ChainId.ROPSTEN], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, WETH9_ADDRESS[ChainId.RINKEBY], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, WETH9_ADDRESS[ChainId.GÖRLI], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, WETH9_ADDRESS[ChainId.KOVAN], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, WETH9_ADDRESS[ChainId.ARBITRUM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.ARBITRUM_TESTNET]: new Token(\r\n    ChainId.ARBITRUM_TESTNET,\r\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped Ether'\r\n  ),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, WETH9_ADDRESS[ChainId.BSC], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WETH9_ADDRESS[ChainId.FANTOM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WETH9_ADDRESS[ChainId.MATIC], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.MATIC_TESTNET]: new Token(\r\n    ChainId.MATIC_TESTNET,\r\n    WETH9_ADDRESS[ChainId.MATIC_TESTNET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped Ether'\r\n  ),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WETH9_ADDRESS[ChainId.OKEX], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, WETH9_ADDRESS[ChainId.HECO], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WETH9_ADDRESS[ChainId.HARMONY], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WETH9_ADDRESS[ChainId.XDAI], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WETH9_ADDRESS[ChainId.AVALANCHE], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.PALM]: new Token(ChainId.PALM, WETH9_ADDRESS[ChainId.PALM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.TELOS]: new Token(ChainId.TELOS, WETH9_ADDRESS[ChainId.TELOS], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.FUSE]: new Token(ChainId.FUSE, WETH9_ADDRESS[ChainId.FUSE], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, WETH9_ADDRESS[ChainId.MOONBEAM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.OPTIMISM]: new Token(ChainId.OPTIMISM, WETH9_ADDRESS[ChainId.OPTIMISM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.KAVA]: new Token(ChainId.KAVA, WETH9_ADDRESS[ChainId.KAVA], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.METIS]: new Token(ChainId.METIS, WETH9_ADDRESS[ChainId.METIS], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.ARBITRUM_NOVA]: new Token(\r\n    ChainId.ARBITRUM_NOVA,\r\n    WETH9_ADDRESS[ChainId.ARBITRUM_NOVA],\r\n    18,\r\n    'WETH',\r\n    'Wrapped Ether'\r\n  ),\r\n}\r\n\r\nexport const WNATIVE: TokenMap = {\r\n  [ChainId.ETHEREUM]: WETH9[ChainId.ETHEREUM],\r\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\r\n  [ChainId.OPBNB]: WETH9[ChainId.OPBNB],\r\n  [ChainId.ZETA_TESTNET]: WETH9[ChainId.ZETA_TESTNET],\r\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\r\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\r\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\r\n  [ChainId.OPTIMISM]: WETH9[ChainId.OPTIMISM],\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WNATIVE_ADDRESS[ChainId.FANTOM], 18, 'WFTM', 'Wrapped FTM'),\r\n  [ChainId.FANTOM_TESTNET]: new Token(\r\n    ChainId.FANTOM_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\r\n    18,\r\n    'FTM',\r\n    'Wrapped FTM'\r\n  ),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\r\n  [ChainId.MATIC_TESTNET]: new Token(\r\n    ChainId.MATIC_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\r\n    18,\r\n    'WMATIC',\r\n    'Wrapped Matic'\r\n  ),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WNATIVE_ADDRESS[ChainId.XDAI], 18, 'WXDAI', 'Wrapped xDai'),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\r\n  [ChainId.BSC_TESTNET]: new Token(\r\n    ChainId.BSC_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB'\r\n  ),\r\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\r\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\r\n  [ChainId.MOONBEAM_TESTNET]: new Token(\r\n    ChainId.MOONBEAM_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped Ether'\r\n  ),\r\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WNATIVE_ADDRESS[ChainId.AVALANCHE], 18, 'WAVAX', 'Wrapped AVAX'),\r\n  [ChainId.AVALANCHE_TESTNET]: new Token(\r\n    ChainId.AVALANCHE_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\r\n    18,\r\n    'WAVAX',\r\n    'Wrapped AVAX'\r\n  ),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, WNATIVE_ADDRESS[ChainId.HECO], 18, 'WHT', 'Wrapped HT'),\r\n  [ChainId.HECO_TESTNET]: new Token(\r\n    ChainId.HECO_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\r\n    18,\r\n    'WHT',\r\n    'Wrapped HT'\r\n  ),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WNATIVE_ADDRESS[ChainId.HARMONY], 18, 'WONE', 'Wrapped ONE'),\r\n  [ChainId.HARMONY_TESTNET]: new Token(\r\n    ChainId.HARMONY_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\r\n    18,\r\n    'WONE',\r\n    'Wrapped ONE'\r\n  ),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WNATIVE_ADDRESS[ChainId.OKEX], 18, 'WOKT', 'Wrapped OKExChain'),\r\n  [ChainId.OKEX_TESTNET]: new Token(\r\n    ChainId.OKEX_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\r\n    18,\r\n    'WOKT',\r\n    'Wrapped OKExChain'\r\n  ),\r\n  [ChainId.CELO]: new Token(ChainId.CELO, WNATIVE_ADDRESS[ChainId.CELO], 18, 'CELO', 'Celo'),\r\n  [ChainId.PALM]: new Token(ChainId.PALM, WNATIVE_ADDRESS[ChainId.PALM], 18, 'WPALM', 'Wrapped Palm'),\r\n  [ChainId.MOONRIVER]: new Token(\r\n    ChainId.MOONRIVER,\r\n    WNATIVE_ADDRESS[ChainId.MOONRIVER],\r\n    18,\r\n    'WMOVR',\r\n    'Wrapped Moonriver'\r\n  ),\r\n  [ChainId.FUSE]: new Token(ChainId.FUSE, WNATIVE_ADDRESS[ChainId.FUSE], 18, 'WFUSE', 'Wrapped Fuse'),\r\n  [ChainId.TELOS]: new Token(ChainId.TELOS, WNATIVE_ADDRESS[ChainId.TELOS], 18, 'WTLOS', 'Wrapped Telos'),\r\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, WNATIVE_ADDRESS[ChainId.MOONBEAM], 18, 'WGLMR', 'Wrapped Glimmer'),\r\n  [ChainId.KAVA]: new Token(ChainId.KAVA, WNATIVE_ADDRESS[ChainId.KAVA], 18, 'WKAVA', 'Wrapped Kava'),\r\n  [ChainId.METIS]: new Token(ChainId.METIS, WNATIVE_ADDRESS[ChainId.METIS], 18, 'WMETIS', 'Wrapped Metis'),\r\n  [ChainId.ARBITRUM_NOVA]: WETH9[ChainId.ARBITRUM_NOVA],\r\n  [ChainId.BOBA_AVAX]: new Token(ChainId.BOBA_AVAX, WNATIVE_ADDRESS[ChainId.BOBA_AVAX], 18, 'WBOBA', 'Wrapped Boba'),\r\n}\r\n\r\nexport const SUSHI: ChainTokenMap = {\r\n  [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, SUSHI_ADDRESS[ChainId.ETHEREUM], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, SUSHI_ADDRESS[ChainId.ROPSTEN], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, SUSHI_ADDRESS[ChainId.RINKEBY], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, SUSHI_ADDRESS[ChainId.GÖRLI], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, SUSHI_ADDRESS[ChainId.KOVAN], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, SUSHI_ADDRESS[ChainId.MATIC], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, SUSHI_ADDRESS[ChainId.FANTOM], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, SUSHI_ADDRESS[ChainId.XDAI], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, SUSHI_ADDRESS[ChainId.BSC], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, SUSHI_ADDRESS[ChainId.ARBITRUM], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, SUSHI_ADDRESS[ChainId.AVALANCHE], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, SUSHI_ADDRESS[ChainId.OKEX], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, SUSHI_ADDRESS[ChainId.HARMONY], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, SUSHI_ADDRESS[ChainId.HECO], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.CELO]: new Token(ChainId.CELO, SUSHI_ADDRESS[ChainId.CELO], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.MOONRIVER]: new Token(ChainId.MOONRIVER, SUSHI_ADDRESS[ChainId.MOONRIVER], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.FUSE]: new Token(ChainId.FUSE, SUSHI_ADDRESS[ChainId.FUSE], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.TELOS]: new Token(ChainId.TELOS, SUSHI_ADDRESS[ChainId.TELOS], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, SUSHI_ADDRESS[ChainId.MOONBEAM], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.KAVA]: new Token(ChainId.KAVA, SUSHI_ADDRESS[ChainId.KAVA], 18, 'SUSHI', 'SushiToken'),\r\n  [ChainId.METIS]: new Token(ChainId.METIS, SUSHI_ADDRESS[ChainId.METIS], 18, 'SUSHI', 'SushiToken'),\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Avalanche extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'AVAX', 'Avalanche')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Avalanche } = {}\r\n\r\n  public static onChain(chainId: number): Avalanche {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Binance extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'BNB', 'Binance Coin')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Binance } = {}\r\n\r\n  public static onChain(chainId: number): Binance {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Celo extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'CELO', 'Celo')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wcelo = WNATIVE[this.chainId]\r\n    invariant(!!wcelo, 'WRAPPED')\r\n    return wcelo\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Celo } = {}\r\n\r\n  public static onChain(chainId: number): Celo {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WETH9 } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\n/**\r\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\r\n */\r\nexport class Ether extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'ETH', 'Ether')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const weth9 = WETH9[this.chainId]\r\n    invariant(!!weth9, 'WRAPPED')\r\n    return weth9\r\n  }\r\n\r\n  private static _etherCache: { [chainId: number]: Ether } = {}\r\n\r\n  public static onChain(chainId: number): Ether {\r\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Fantom extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'FTM', 'Fantom')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Fantom } = {}\r\n\r\n  public static onChain(chainId: number): Fantom {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Harmony extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'ONE', 'Harmony')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Harmony } = {}\r\n\r\n  public static onChain(chainId: number): Harmony {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Heco extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'HT', 'Huobi Token')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Heco } = {}\r\n\r\n  public static onChain(chainId: number): Heco {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Matic extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'MATIC', 'Matic')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Matic } = {}\r\n\r\n  public static onChain(chainId: number): Matic {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Movr extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'MOVR', 'Moonriver')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Movr } = {}\r\n\r\n  public static onChain(chainId: number): Movr {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Movr(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Okex extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'OKT', 'OKExChain')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Okex } = {}\r\n\r\n  public static onChain(chainId: number): Okex {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class xDai extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'XDAI', 'xDai')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: xDai } = {}\r\n\r\n  public static onChain(chainId: number): xDai {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Palm extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'PALM', 'Palm')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Palm } = {}\r\n\r\n  public static onChain(chainId: number): Palm {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Fuse extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'FUSE', 'Fuse')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Fuse } = {}\r\n\r\n  public static onChain(chainId: number): Fuse {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fuse(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Telos extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'TLOS', 'Telos')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Telos } = {}\r\n\r\n  public static onChain(chainId: number): Telos {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Telos(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Glmr extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'GLMR', 'Glimmer')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Glmr } = {}\r\n\r\n  public static onChain(chainId: number): Glmr {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Glmr(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Kava extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'KAVA', 'Kava')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Kava } = {}\r\n\r\n  public static onChain(chainId: number): Kava {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Kava(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Metis extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'METIS', 'Metis')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Metis } = {}\r\n\r\n  public static onChain(chainId: number): Metis {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Metis(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class opBNB extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'BNB', 'BNB')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: opBNB } = {}\r\n\r\n  public static onChain(chainId: number): opBNB {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new opBNB(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Boba extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'BOBA', 'Boba')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wcelo = WNATIVE[this.chainId]\r\n    invariant(!!wcelo, 'WRAPPED')\r\n    return wcelo\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Boba } = {}\r\n\r\n  public static onChain(chainId: number): Boba {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Boba(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class zetaTestnet extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'ZETA', 'ZETA')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: zetaTestnet } = {}\r\n\r\n  public static onChain(chainId: number): zetaTestnet {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new zetaTestnet(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import {\r\n  Avalanche,\r\n  Binance,\r\n  Celo,\r\n  Ether,\r\n  Fantom,\r\n  Fuse,\r\n  Glmr,\r\n  Harmony,\r\n  Heco,\r\n  Kava,\r\n  Matic,\r\n  Movr,\r\n  Okex,\r\n  Palm,\r\n  Telos,\r\n  xDai,\r\n  Metis,\r\n  opBNB,\r\n  Boba,\r\n  zetaTestnet\r\n} from '../entities/Native'\r\n\r\nimport { ChainId } from '../enums'\r\nimport { NativeMap } from '../types'\r\n\r\nexport const NATIVE: NativeMap = {\r\n  [ChainId.ETHEREUM]: Ether.onChain(ChainId.ETHEREUM),\r\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\r\n  [ChainId.OPBNB]: opBNB.onChain(ChainId.OPBNB),\r\n  [ChainId.ZETA_TESTNET]: zetaTestnet.onChain(ChainId.ZETA_TESTNET),\r\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\r\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\r\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\r\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\r\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\r\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\r\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\r\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\r\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\r\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\r\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\r\n  [ChainId.ARBITRUM]: Ether.onChain(ChainId.ARBITRUM),\r\n  [ChainId.ARBITRUM_TESTNET]: Ether.onChain(ChainId.ARBITRUM_TESTNET),\r\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\r\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\r\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\r\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\r\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\r\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\r\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\r\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\r\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\r\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM),\r\n  [ChainId.MOONRIVER]: Movr.onChain(ChainId.MOONRIVER),\r\n  [ChainId.FUSE]: Fuse.onChain(ChainId.FUSE),\r\n  [ChainId.TELOS]: Telos.onChain(ChainId.TELOS),\r\n  [ChainId.MOONBEAM]: Glmr.onChain(ChainId.MOONBEAM),\r\n  [ChainId.OPTIMISM]: Ether.onChain(ChainId.OPTIMISM),\r\n  [ChainId.KAVA]: Kava.onChain(ChainId.KAVA),\r\n  [ChainId.METIS]: Metis.onChain(ChainId.METIS),\r\n  [ChainId.ARBITRUM_NOVA]: Ether.onChain(ChainId.ARBITRUM_NOVA),\r\n  [ChainId.BOBA_AVAX]: Boba.onChain(ChainId.BOBA_AVAX),\r\n}\r\n","import JSBI from 'jsbi'\r\n\r\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n\r\n// exports for internal consumption\r\nexport const ZERO = JSBI.BigInt(0)\r\nexport const ONE = JSBI.BigInt(1)\r\nexport const TWO = JSBI.BigInt(2)\r\nexport const THREE = JSBI.BigInt(3)\r\nexport const FIVE = JSBI.BigInt(5)\r\nexport const TEN = JSBI.BigInt(10)\r\nexport const _100 = JSBI.BigInt(100)\r\nexport const _997 = JSBI.BigInt(997)\r\nexport const _1000 = JSBI.BigInt(1000)\r\n\r\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)","import JSBI from 'jsbi'\r\nimport { SolidityType } from \"../enums/SolidityType\";\r\n\r\nexport const SOLIDITY_TYPE_MAXIMA = {\r\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\r\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'),\r\n}","// see https://stackoverflow.com/a/41102306\r\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\r\n\r\n/**\r\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\r\n * obtained by sending any amount of input.\r\n */\r\nexport class InsufficientReservesError extends Error {\r\n  public readonly isInsufficientReservesError: true = true\r\n\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\r\n  }\r\n}\r\n\r\n/**\r\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\r\n * than the price of a single unit of output after fees.\r\n */\r\nexport class InsufficientInputAmountError extends Error {\r\n  public readonly isInsufficientInputAmountError: true = true\r\n\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\r\n  }\r\n}\r\n","import _Big, { RoundingMode } from 'big.js'\r\n\r\nimport { BigintIsh } from '../types'\r\nimport JSBI from 'jsbi'\r\nimport { Rounding } from '../enums'\r\nimport _Decimal from 'decimal.js-light'\r\nimport invariant from 'tiny-invariant'\r\nimport toFormat from 'toformat'\r\n\r\nconst Decimal = toFormat(_Decimal)\r\nconst Big = toFormat(_Big)\r\n\r\nBig.strict = true\r\n\r\nconst toSignificantRounding = {\r\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\r\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\r\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP,\r\n}\r\n\r\nconst toFixedRounding = {\r\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\r\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\r\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp,\r\n}\r\n\r\nexport class Fraction {\r\n  public readonly numerator: JSBI\r\n  public readonly denominator: JSBI\r\n\r\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\r\n    this.numerator = JSBI.BigInt(numerator)\r\n    this.denominator = JSBI.BigInt(denominator)\r\n  }\r\n\r\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\r\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\r\n      return new Fraction(fractionish)\r\n\r\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\r\n    throw new Error('Could not parse fraction')\r\n  }\r\n\r\n  // performs floor division\r\n  public get quotient(): JSBI {\r\n    return JSBI.divide(this.numerator, this.denominator)\r\n  }\r\n\r\n  // remainder after floor division\r\n  public get remainder(): Fraction {\r\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\r\n  }\r\n\r\n  public invert(): Fraction {\r\n    return new Fraction(this.denominator, this.numerator)\r\n  }\r\n\r\n  public add(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\r\n    }\r\n    return new Fraction(\r\n      JSBI.add(\r\n        JSBI.multiply(this.numerator, otherParsed.denominator),\r\n        JSBI.multiply(otherParsed.numerator, this.denominator)\r\n      ),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    )\r\n  }\r\n\r\n  public subtract(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\r\n    }\r\n    return new Fraction(\r\n      JSBI.subtract(\r\n        JSBI.multiply(this.numerator, otherParsed.denominator),\r\n        JSBI.multiply(otherParsed.numerator, this.denominator)\r\n      ),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    )\r\n  }\r\n\r\n  public lessThan(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return JSBI.lessThan(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    )\r\n  }\r\n\r\n  public equalTo(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return JSBI.equal(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    )\r\n  }\r\n\r\n  public greaterThan(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return JSBI.greaterThan(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    )\r\n  }\r\n\r\n  public multiply(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return new Fraction(\r\n      JSBI.multiply(this.numerator, otherParsed.numerator),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    )\r\n  }\r\n\r\n  public divide(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return new Fraction(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(this.denominator, otherParsed.numerator)\r\n    )\r\n  }\r\n\r\n  public toSignificant(\r\n    significantDigits: number,\r\n    format: object = { groupSeparator: '' },\r\n    rounding: Rounding = Rounding.ROUND_HALF_UP\r\n  ): string {\r\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\r\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\r\n\r\n    Decimal.set({\r\n      precision: significantDigits + 1,\r\n      rounding: toSignificantRounding[rounding],\r\n    })\r\n    const quotient = new Decimal(this.numerator.toString())\r\n      .div(this.denominator.toString())\r\n      .toSignificantDigits(significantDigits)\r\n    return quotient.toFormat(quotient.decimalPlaces(), format)\r\n  }\r\n\r\n  public toFixed(\r\n    decimalPlaces: number,\r\n    format: object = { groupSeparator: '' },\r\n    rounding: Rounding = Rounding.ROUND_HALF_UP\r\n  ): string {\r\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\r\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\r\n\r\n    Big.DP = decimalPlaces\r\n    Big.RM = toFixedRounding[rounding]\r\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\r\n  }\r\n\r\n  /**\r\n   * Helper method for converting any super class back to a fraction\r\n   */\r\n  public get asFraction(): Fraction {\r\n    return new Fraction(this.numerator, this.denominator)\r\n  }\r\n}\r\n","import { BigintIsh } from '../types'\r\nimport { Currency } from './Currency'\r\nimport { Fraction } from './Fraction'\r\nimport JSBI from 'jsbi'\r\nimport { MaxUint256 } from '../constants'\r\nimport { Rounding } from '../enums'\r\nimport { Token } from './Token'\r\nimport _Big from 'big.js'\r\nimport invariant from 'tiny-invariant'\r\nimport toFormat from 'toformat'\r\n\r\nconst Big = toFormat(_Big)\r\n\r\nBig.strict = true\r\n\r\nexport class CurrencyAmount<T extends Currency> extends Fraction {\r\n  public readonly currency: T\r\n  public readonly decimalScale: JSBI\r\n\r\n  /**\r\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\r\n   * @param currency the currency in the amount\r\n   * @param rawAmount the raw token or ether amount\r\n   */\r\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\r\n    return new CurrencyAmount(currency, rawAmount)\r\n  }\r\n\r\n  /**\r\n   * Construct a currency amount with a denominator that is not equal to 1\r\n   * @param currency the currency\r\n   * @param numerator the numerator of the fractional token amount\r\n   * @param denominator the denominator of the fractional token amount\r\n   */\r\n  public static fromFractionalAmount<T extends Currency>(\r\n    currency: T,\r\n    numerator: BigintIsh,\r\n    denominator: BigintIsh\r\n  ): CurrencyAmount<T> {\r\n    return new CurrencyAmount(currency, numerator, denominator)\r\n  }\r\n\r\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\r\n    super(numerator, denominator)\r\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\r\n    this.currency = currency\r\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\r\n  }\r\n\r\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\r\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\r\n    const added = super.add(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\r\n  }\r\n\r\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\r\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\r\n    const subtracted = super.subtract(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\r\n  }\r\n\r\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\r\n    const multiplied = super.multiply(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\r\n  }\r\n\r\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\r\n    const divided = super.divide(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\r\n  }\r\n\r\n  public toSignificant(\r\n    significantDigits: number = 6,\r\n    format?: object,\r\n    rounding: Rounding = Rounding.ROUND_DOWN\r\n  ): string {\r\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\r\n  }\r\n\r\n  public toFixed(\r\n    decimalPlaces: number = this.currency.decimals,\r\n    format?: object,\r\n    rounding: Rounding = Rounding.ROUND_DOWN\r\n  ): string {\r\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\r\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\r\n  }\r\n\r\n  public toExact(format: object = { groupSeparator: '' }): string {\r\n    Big.DP = this.currency.decimals\r\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\r\n  }\r\n\r\n  public get wrapped(): CurrencyAmount<Token> {\r\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\r\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of the address and currency amount.\r\n   * Useful in cases where a dependency is needed to detect changes (e.g. useEffect).\r\n   * @return string [0x6B3595068778DD592e39A122f4f5a5cF09C90fE2 - 1323.94]\r\n   */\r\n  public serialize(): string {\r\n    return `[${this.currency.wrapped.address} - ${this.toExact()}]`\r\n  }\r\n}\r\n","import { BigintIsh } from '../types'\r\nimport { Currency } from './Currency'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport { Fraction } from './Fraction'\r\nimport JSBI from 'jsbi'\r\nimport { Rounding } from '../enums'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\r\n  public readonly baseCurrency: TBase // input i.e. denominator\r\n  public readonly quoteCurrency: TQuote // output i.e. numerator\r\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\r\n\r\n  /**\r\n   * Construct a price, either with the base and quote currency amount, or the\r\n   * @param args\r\n   */\r\n  public constructor(\r\n    ...args:\r\n      | [TBase, TQuote, BigintIsh, BigintIsh]\r\n      | [\r\n          {\r\n            baseAmount: CurrencyAmount<TBase>\r\n            quoteAmount: CurrencyAmount<TQuote>\r\n          }\r\n        ]\r\n  ) {\r\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\r\n\r\n    if (args.length === 4) {\r\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\r\n    } else {\r\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\r\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\r\n        args[0].baseAmount.currency,\r\n        args[0].quoteAmount.currency,\r\n        result.denominator,\r\n        result.numerator,\r\n      ]\r\n    }\r\n    super(numerator, denominator)\r\n\r\n    this.baseCurrency = baseCurrency\r\n    this.quoteCurrency = quoteCurrency\r\n    this.scalar = new Fraction(\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Flip the price, switching the base and quote currency\r\n   */\r\n  public invert(): Price<TQuote, TBase> {\r\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\r\n  }\r\n\r\n  /**\r\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\r\n   * @param other the other price\r\n   */\r\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\r\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\r\n    const fraction = super.multiply(other)\r\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\r\n  }\r\n\r\n  /**\r\n   * Return the amount of quote currency corresponding to a given amount of the base currency\r\n   * @param currencyAmount the amount of base currency to quote against the price\r\n   */\r\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\r\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\r\n    const result = super.multiply(currencyAmount)\r\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\r\n  }\r\n\r\n  /**\r\n   * Get the value scaled by decimals for formatting\r\n   * @private\r\n   */\r\n  private get adjustedForDecimals(): Fraction {\r\n    return super.multiply(this.scalar)\r\n  }\r\n\r\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\r\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\r\n  }\r\n\r\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\r\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\r\n  }\r\n}\r\n","import { keccak256, pack } from '@ethersproject/solidity'\r\n\r\nimport { INIT_CODE_HASH } from '../constants'\r\nimport { Token } from '../entities/Token'\r\nimport { getCreate2Address } from '@ethersproject/address'\r\n\r\nexport const computePairAddress = ({\r\n  factoryAddress,\r\n  tokenA,\r\n  tokenB,\r\n}: {\r\n  factoryAddress: string\r\n  tokenA: Token\r\n  tokenB: Token\r\n}): string => {\r\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\r\n  return getCreate2Address(\r\n    factoryAddress,\r\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\r\n    INIT_CODE_HASH[token0.chainId]\r\n  )\r\n}\r\n","import { ONE, TWO, ZERO } from '../constants/numbers'\r\n\r\nimport JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\r\n\r\n/**\r\n * Computes floor(sqrt(value))\r\n * @param value the value for which to compute the square root, rounded down\r\n */\r\nexport function sqrt(value: JSBI): JSBI {\r\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\r\n\r\n  // rely on built in sqrt if possible\r\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\r\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\r\n  }\r\n\r\n  let z: JSBI\r\n  let x: JSBI\r\n  z = value\r\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\r\n  while (JSBI.lessThan(x, z)) {\r\n    z = x\r\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\r\n  }\r\n  return z\r\n}\r\n\r\n/**\r\n * Returns the smallest member of the array\r\n * @param values the values from which the smallest gets returned\r\n * @returns the smallest memmber of the array\r\n */\r\nexport function minimum(...values: JSBI[]): JSBI {\r\n  let lowest = values[0]\r\n  for (let i = 1; i < values.length; i++) {\r\n    const value = values[i]\r\n    if (JSBI.LT(value, lowest)) {\r\n      lowest = value\r\n    }\r\n  }\r\n  return lowest\r\n}\r\n\r\n/**\r\n * Returns the biggest member of the array\r\n * @param values the values from which the biggest gets returned\r\n * @returns the biggest memmber of the array\r\n */\r\nexport function maximum(...values: JSBI[]): JSBI {\r\n  let highest = values[0]\r\n  for (let i = 1; i < values.length; i++) {\r\n    const value = values[i]\r\n    if (JSBI.GT(value, highest)) {\r\n      highest = value\r\n    }\r\n  }\r\n  return highest\r\n}\r\n\r\nexport function difference(a: JSBI, b: JSBI): JSBI {\r\n  if (JSBI.greaterThan(a, b)) {\r\n    return JSBI.subtract(a, b)\r\n  }\r\n  return JSBI.subtract(b, a)\r\n}\r\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\r\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\r\n\r\nimport { BigintIsh } from '../types'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport JSBI from 'jsbi'\r\nimport { Price } from './Price'\r\nimport { Token } from './Token'\r\nimport { computePairAddress } from '../functions/computePairAddress'\r\nimport invariant from 'tiny-invariant'\r\nimport { sqrt } from '../functions/math'\r\n\r\nexport class Pair {\r\n  public readonly liquidityToken: Token\r\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\r\n\r\n  public static getAddress(tokenA: Token, tokenB: Token): string {\r\n    return computePairAddress({\r\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\r\n      tokenA,\r\n      tokenB,\r\n    })\r\n  }\r\n\r\n  public constructor(currencyAmountA: CurrencyAmount<Token>, currencyAmountB: CurrencyAmount<Token>) {\r\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\r\n      ? [currencyAmountA, currencyAmountB]\r\n      : [currencyAmountB, currencyAmountA]\r\n    this.liquidityToken = new Token(\r\n      currencyAmounts[0].currency.chainId,\r\n      Pair.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency),\r\n      18,\r\n      'AceSwap-LP',\r\n      'AceSwap LPs'\r\n    )\r\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\r\n  }\r\n\r\n  /**\r\n   * Returns true if the token is either token0 or token1\r\n   * @param token to check\r\n   */\r\n  public involvesToken(token: Token): boolean {\r\n    return token.equals(this.token0) || token.equals(this.token1)\r\n  }\r\n\r\n  /**\r\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\r\n   */\r\n  public get token0Price(): Price<Token, Token> {\r\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\r\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\r\n  }\r\n\r\n  /**\r\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\r\n   */\r\n  public get token1Price(): Price<Token, Token> {\r\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\r\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\r\n  }\r\n\r\n  /**\r\n   * Return the price of the given token in terms of the other token in the pair.\r\n   * @param token token to return price of\r\n   */\r\n  public priceOf(token: Token): Price<Token, Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\r\n  }\r\n\r\n  /**\r\n   * Returns the chain ID of the tokens in the pair.\r\n   */\r\n  public get chainId(): number {\r\n    return this.token0.chainId\r\n  }\r\n\r\n  public get token0(): Token {\r\n    return this.tokenAmounts[0].currency\r\n  }\r\n\r\n  public get token1(): Token {\r\n    return this.tokenAmounts[1].currency\r\n  }\r\n\r\n  public get reserve0(): CurrencyAmount<Token> {\r\n    return this.tokenAmounts[0]\r\n  }\r\n\r\n  public get reserve1(): CurrencyAmount<Token> {\r\n    return this.tokenAmounts[1]\r\n  }\r\n\r\n  public reserveOf(token: Token): CurrencyAmount<Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\r\n  }\r\n\r\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\r\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\r\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\r\n      throw new InsufficientReservesError()\r\n    }\r\n    const inputReserve = this.reserveOf(inputAmount.currency)\r\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\r\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\r\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\r\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\r\n    const outputAmount = CurrencyAmount.fromRawAmount(\r\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\r\n      JSBI.divide(numerator, denominator)\r\n    )\r\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\r\n      throw new InsufficientInputAmountError()\r\n    }\r\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\r\n  }\r\n\r\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\r\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\r\n    if (\r\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\r\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\r\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\r\n    ) {\r\n      throw new InsufficientReservesError()\r\n    }\r\n\r\n    const outputReserve = this.reserveOf(outputAmount.currency)\r\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\r\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\r\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\r\n    const inputAmount = CurrencyAmount.fromRawAmount(\r\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\r\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\r\n    )\r\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\r\n  }\r\n\r\n  public getLiquidityMinted(\r\n    totalSupply: CurrencyAmount<Token>,\r\n    tokenAmountA: CurrencyAmount<Token>,\r\n    tokenAmountB: CurrencyAmount<Token>\r\n  ): CurrencyAmount<Token> {\r\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\r\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\r\n      ? [tokenAmountA, tokenAmountB]\r\n      : [tokenAmountB, tokenAmountA]\r\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\r\n\r\n    let liquidity: JSBI\r\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\r\n      liquidity = JSBI.subtract(\r\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\r\n        MINIMUM_LIQUIDITY\r\n      )\r\n    } else {\r\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\r\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\r\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\r\n\r\n      console.log({\r\n        amount0: amount0.toString(),\r\n        amount1: amount1.toString(),\r\n        liquidity: liquidity.toString(),\r\n        totalSupply: totalSupply.quotient.toString(),\r\n        kLast: sqrt(JSBI.multiply(this.tokenAmounts[0].quotient, this.tokenAmounts[1].quotient)),\r\n      })\r\n    }\r\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\r\n      throw new InsufficientInputAmountError()\r\n    }\r\n\r\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\r\n  }\r\n\r\n  public getLiquidityValue(\r\n    token: Token,\r\n    totalSupply: CurrencyAmount<Token>,\r\n    liquidity: CurrencyAmount<Token>,\r\n    feeOn: boolean = false,\r\n    kLast?: BigintIsh\r\n  ): CurrencyAmount<Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\r\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\r\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\r\n\r\n    let totalSupplyAdjusted: CurrencyAmount<Token>\r\n    if (!feeOn) {\r\n      totalSupplyAdjusted = totalSupply\r\n    } else {\r\n      invariant(!!kLast, 'K_LAST')\r\n      const kLastParsed = JSBI.BigInt(kLast)\r\n      if (!JSBI.equal(kLastParsed, ZERO)) {\r\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\r\n        const rootKLast = sqrt(kLastParsed)\r\n        if (JSBI.greaterThan(rootK, rootKLast)) {\r\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\r\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\r\n          const feeLiquidity = JSBI.divide(numerator, denominator)\r\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\r\n        } else {\r\n          totalSupplyAdjusted = totalSupply\r\n        }\r\n      } else {\r\n        totalSupplyAdjusted = totalSupply\r\n      }\r\n    }\r\n\r\n    return CurrencyAmount.fromRawAmount(\r\n      token,\r\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\r\n    )\r\n  }\r\n}\r\n","import { BigintIsh } from '../types'\r\nimport { Fraction } from './Fraction'\r\nimport JSBI from 'jsbi'\r\nimport { Rounding } from '../enums'\r\n\r\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\r\n\r\n/**\r\n * Converts a fraction to a percent\r\n * @param fraction the fraction to convert\r\n */\r\nfunction toPercent(fraction: Fraction): Percent {\r\n  return new Percent(fraction.numerator, fraction.denominator)\r\n}\r\n\r\nexport class Percent extends Fraction {\r\n  /**\r\n   * This boolean prevents a fraction from being interpreted as a Percent\r\n   */\r\n  public readonly isPercent: true = true\r\n\r\n  add(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.add(other))\r\n  }\r\n\r\n  subtract(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.subtract(other))\r\n  }\r\n\r\n  multiply(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.multiply(other))\r\n  }\r\n\r\n  divide(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.divide(other))\r\n  }\r\n\r\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\r\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\r\n  }\r\n\r\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\r\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\r\n  }\r\n}\r\n","import { Currency } from './Currency'\r\nimport { Pair } from './Pair'\r\nimport { Price } from './Price'\r\nimport { Token } from './Token'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Route<TInput extends Currency, TOutput extends Currency> {\r\n  public readonly pairs: Pair[]\r\n  public readonly path: Token[]\r\n  public readonly input: TInput\r\n  public readonly output: TOutput\r\n\r\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\r\n    invariant(pairs.length > 0, 'PAIRS')\r\n    const chainId: number = pairs[0].chainId\r\n    invariant(\r\n      pairs.every((pair) => pair.chainId === chainId),\r\n      'CHAIN_IDS'\r\n    )\r\n\r\n    const wrappedInput = input.wrapped\r\n    invariant(pairs[0].involvesToken(wrappedInput), 'INPUT')\r\n    invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT')\r\n\r\n    const path: Token[] = [wrappedInput]\r\n    for (const [i, pair] of pairs.entries()) {\r\n      const currentInput = path[i]\r\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\r\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\r\n      path.push(output)\r\n    }\r\n\r\n    this.pairs = pairs\r\n    this.path = path\r\n    this.input = input\r\n    this.output = output\r\n  }\r\n\r\n  private _midPrice: Price<TInput, TOutput> | null = null\r\n\r\n  public get midPrice(): Price<TInput, TOutput> {\r\n    if (this._midPrice !== null) return this._midPrice\r\n    const prices: Price<Currency, Currency>[] = []\r\n    for (const [i, pair] of this.pairs.entries()) {\r\n      prices.push(\r\n        this.path[i].equals(pair.token0)\r\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\r\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient)\r\n      )\r\n    }\r\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\r\n    return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator))\r\n  }\r\n\r\n  public get chainId(): number {\r\n    return this.pairs[0].chainId\r\n  }\r\n}\r\n","import { Currency } from '../entities/Currency'\r\nimport { CurrencyAmount } from '../entities/CurrencyAmount'\r\nimport { Percent } from '../entities/Percent'\r\nimport { Price } from '../entities/Price'\r\n\r\n/**\r\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\r\n * @param midPrice mid price before the trade\r\n * @param inputAmount the input amount of the trade\r\n * @param outputAmount the output amount of the trade\r\n */\r\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\r\n  midPrice: Price<TBase, TQuote>,\r\n  inputAmount: CurrencyAmount<TBase>,\r\n  outputAmount: CurrencyAmount<TQuote>\r\n): Percent {\r\n  const quotedOutputAmount = midPrice.quote(inputAmount)\r\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\r\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\r\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\r\n}\r\n","import invariant from 'tiny-invariant'\r\n\r\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\r\n// `maxSize` by removing the last item\r\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\r\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\r\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\r\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\r\n\r\n  // short circuit first item add\r\n  if (items.length === 0) {\r\n    items.push(add)\r\n    return null\r\n  } else {\r\n    const isFull = items.length === maxSize\r\n    // short circuit if full and the additional item does not come before the last item\r\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\r\n      return add\r\n    }\r\n\r\n    let lo = 0,\r\n      hi = items.length\r\n\r\n    while (lo < hi) {\r\n      const mid = (lo + hi) >>> 1\r\n      if (comparator(items[mid], add) <= 0) {\r\n        lo = mid + 1\r\n      } else {\r\n        hi = mid\r\n      }\r\n    }\r\n    items.splice(lo, 0, add)\r\n    return isFull ? items.pop()! : null\r\n  }\r\n}\r\n","import { ONE, ZERO } from '../constants'\r\n\r\nimport { Currency } from './Currency'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport { Fraction } from './Fraction'\r\nimport { Pair } from './Pair'\r\nimport { Percent } from './Percent'\r\nimport { Price } from './Price'\r\nimport { Route } from './Route'\r\nimport { Token } from './Token'\r\nimport { TradeType } from '../enums/TradeType'\r\nimport { computePriceImpact } from '../functions/computePriceImpact'\r\nimport invariant from 'tiny-invariant'\r\nimport { sortedInsert } from '../functions/sortedInsert'\r\n\r\n// minimal interface so the input output comparator may be shared across types\r\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\r\n  readonly inputAmount: CurrencyAmount<TInput>\r\n  readonly outputAmount: CurrencyAmount<TOutput>\r\n}\r\n\r\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\r\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\r\nexport function inputOutputComparator<TInput extends Currency, TOutput extends Currency>(\r\n  a: InputOutput<TInput, TOutput>,\r\n  b: InputOutput<TInput, TOutput>\r\n): number {\r\n  // must have same input and output token for comparison\r\n  invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\r\n  invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\r\n  if (a.outputAmount.equalTo(b.outputAmount)) {\r\n    if (a.inputAmount.equalTo(b.inputAmount)) {\r\n      return 0\r\n    }\r\n    // trade A requires less input than trade B, so A should come first\r\n    if (a.inputAmount.lessThan(b.inputAmount)) {\r\n      return -1\r\n    } else {\r\n      return 1\r\n    }\r\n  } else {\r\n    // tradeA has less output than trade B, so should come second\r\n    if (a.outputAmount.lessThan(b.outputAmount)) {\r\n      return 1\r\n    } else {\r\n      return -1\r\n    }\r\n  }\r\n}\r\n\r\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\r\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\r\n  a: Trade<TInput, TOutput, TTradeType>,\r\n  b: Trade<TInput, TOutput, TTradeType>\r\n) {\r\n  const ioComp = inputOutputComparator(a, b)\r\n  if (ioComp !== 0) {\r\n    return ioComp\r\n  }\r\n\r\n  // consider lowest slippage next, since these are less likely to fail\r\n  if (a.priceImpact.lessThan(b.priceImpact)) {\r\n    return -1\r\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\r\n    return 1\r\n  }\r\n\r\n  // finally consider the number of hops since each hop costs gas\r\n  return a.route.path.length - b.route.path.length\r\n}\r\n\r\nexport interface BestTradeOptions {\r\n  // how many results to return\r\n  maxNumResults?: number\r\n  // the maximum number of hops a trade should contain\r\n  maxHops?: number\r\n}\r\n\r\n/**\r\n * Represents a trade executed against a list of pairs.\r\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\r\n */\r\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\r\n  /**\r\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\r\n   */\r\n  public readonly route: Route<TInput, TOutput>\r\n  /**\r\n   * The type of the trade, either exact in or exact out.\r\n   */\r\n  public readonly tradeType: TTradeType\r\n  /**\r\n   * The input amount for the trade assuming no slippage.\r\n   */\r\n  public readonly inputAmount: CurrencyAmount<TInput>\r\n  /**\r\n   * The output amount for the trade assuming no slippage.\r\n   */\r\n  public readonly outputAmount: CurrencyAmount<TOutput>\r\n  /**\r\n   * The price expressed in terms of output amount/input amount.\r\n   */\r\n  public readonly executionPrice: Price<TInput, TOutput>\r\n  /**\r\n   * The percent difference between the mid price before the trade and the trade execution price.\r\n   */\r\n  public readonly priceImpact: Percent\r\n\r\n  /**\r\n   * Constructs an exact in trade with the given amount in and route\r\n   * @param route route of the exact in trade\r\n   * @param amountIn the amount being passed in\r\n   */\r\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\r\n    route: Route<TInput, TOutput>,\r\n    amountIn: CurrencyAmount<TInput>\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\r\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\r\n  }\r\n\r\n  /**\r\n   * Constructs an exact out trade with the given amount out and route\r\n   * @param route route of the exact out trade\r\n   * @param amountOut the amount returned by the trade\r\n   */\r\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\r\n    route: Route<TInput, TOutput>,\r\n    amountOut: CurrencyAmount<TOutput>\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\r\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\r\n  }\r\n\r\n  public constructor(\r\n    route: Route<TInput, TOutput>,\r\n    amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\r\n    tradeType: TTradeType\r\n  ) {\r\n    this.route = route\r\n    this.tradeType = tradeType\r\n\r\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length)\r\n    if (tradeType === TradeType.EXACT_INPUT) {\r\n      invariant(amount.currency.equals(route.input), 'INPUT')\r\n      tokenAmounts[0] = amount.wrapped\r\n      for (let i = 0; i < route.path.length - 1; i++) {\r\n        const pair = route.pairs[i]\r\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i])\r\n        tokenAmounts[i + 1] = outputAmount\r\n      }\r\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\r\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\r\n        route.output,\r\n        tokenAmounts[tokenAmounts.length - 1].numerator,\r\n        tokenAmounts[tokenAmounts.length - 1].denominator\r\n      )\r\n    } else {\r\n      invariant(amount.currency.equals(route.output), 'OUTPUT')\r\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped\r\n      for (let i = route.path.length - 1; i > 0; i--) {\r\n        const pair = route.pairs[i - 1]\r\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i])\r\n        tokenAmounts[i - 1] = inputAmount\r\n      }\r\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\r\n        route.input,\r\n        tokenAmounts[0].numerator,\r\n        tokenAmounts[0].denominator\r\n      )\r\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\r\n    }\r\n    this.executionPrice = new Price(\r\n      this.inputAmount.currency,\r\n      this.outputAmount.currency,\r\n      this.inputAmount.quotient,\r\n      this.outputAmount.quotient\r\n    )\r\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\r\n  }\r\n\r\n  /**\r\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\r\n   */\r\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\r\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\r\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\r\n      return this.outputAmount\r\n    } else {\r\n      const slippageAdjustedAmountOut = new Fraction(ONE)\r\n        .add(slippageTolerance)\r\n        .invert()\r\n        .multiply(this.outputAmount.quotient).quotient\r\n      return CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\r\n   */\r\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\r\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\r\n    if (this.tradeType === TradeType.EXACT_INPUT) {\r\n      return this.inputAmount\r\n    } else {\r\n      const slippageAdjustedAmountIn = new Fraction(ONE)\r\n        .add(slippageTolerance)\r\n        .multiply(this.inputAmount.quotient).quotient\r\n      return CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\r\n   * amount to an output token, making at most `maxHops` hops.\r\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pairs the pairs to consider in finding the best trade\r\n   * @param nextAmountIn exact amount of input currency to spend\r\n   * @param currencyOut the desired currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\r\n   * @param currentPairs used in recursion; the current list of pairs\r\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   */\r\n  public static bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\r\n    pairs: Pair[],\r\n    currencyAmountIn: CurrencyAmount<TInput>,\r\n    currencyOut: TOutput,\r\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\r\n    // used in recursion.\r\n    currentPairs: Pair[] = [],\r\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\r\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\r\n    invariant(pairs.length > 0, 'PAIRS')\r\n    invariant(maxHops > 0, 'MAX_HOPS')\r\n    invariant(currencyAmountIn === nextAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\r\n\r\n    const amountIn = nextAmountIn.wrapped\r\n    const tokenOut = currencyOut.wrapped\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      const pair = pairs[i]\r\n      // pair irrelevant\r\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency)) continue\r\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\r\n\r\n      let amountOut: CurrencyAmount<Token>\r\n      try {\r\n        ;[amountOut] = pair.getOutputAmount(amountIn)\r\n      } catch (error) {\r\n        // input too low\r\n        if (error.isInsufficientInputAmountError) {\r\n          continue\r\n        }\r\n        throw error\r\n      }\r\n      // we have arrived at the output token, so this is the final trade of one of the paths\r\n      if (amountOut.currency.equals(tokenOut)) {\r\n        sortedInsert(\r\n          bestTrades,\r\n          new Trade(\r\n            new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut),\r\n            currencyAmountIn,\r\n            TradeType.EXACT_INPUT\r\n          ),\r\n          maxNumResults,\r\n          tradeComparator\r\n        )\r\n      } else if (maxHops > 1 && pairs.length > 1) {\r\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\r\n\r\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\r\n        Trade.bestTradeExactIn(\r\n          pairsExcludingThisPair,\r\n          currencyAmountIn,\r\n          currencyOut,\r\n          {\r\n            maxNumResults,\r\n            maxHops: maxHops - 1,\r\n          },\r\n          [...currentPairs, pair],\r\n          amountOut,\r\n          bestTrades\r\n        )\r\n      }\r\n    }\r\n\r\n    return bestTrades\r\n  }\r\n\r\n  /**\r\n   * Return the execution price after accounting for slippage tolerance\r\n   * @param slippageTolerance the allowed tolerated slippage\r\n   */\r\n  public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\r\n    return new Price(\r\n      this.inputAmount.currency,\r\n      this.outputAmount.currency,\r\n      this.maximumAmountIn(slippageTolerance).quotient,\r\n      this.minimumAmountOut(slippageTolerance).quotient\r\n    )\r\n  }\r\n\r\n  /**\r\n   * similar to the above method but instead targets a fixed output amount\r\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\r\n   * to an output token amount, making at most `maxHops` hops\r\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pairs the pairs to consider in finding the best trade\r\n   * @param currencyIn the currency to spend\r\n   * @param nextAmountOut the exact amount of currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\r\n   * @param currentPairs used in recursion; the current list of pairs\r\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   */\r\n  public static bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\r\n    pairs: Pair[],\r\n    currencyIn: TInput,\r\n    currencyAmountOut: CurrencyAmount<TOutput>,\r\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\r\n    // used in recursion.\r\n    currentPairs: Pair[] = [],\r\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\r\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\r\n    invariant(pairs.length > 0, 'PAIRS')\r\n    invariant(maxHops > 0, 'MAX_HOPS')\r\n    invariant(currencyAmountOut === nextAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\r\n\r\n    const amountOut = nextAmountOut.wrapped\r\n    const tokenIn = currencyIn.wrapped\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      const pair = pairs[i]\r\n      // pair irrelevant\r\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency)) continue\r\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\r\n\r\n      let amountIn: CurrencyAmount<Token>\r\n      try {\r\n        ;[amountIn] = pair.getInputAmount(amountOut)\r\n      } catch (error) {\r\n        // not enough liquidity in this pair\r\n        if (error.isInsufficientReservesError) {\r\n          continue\r\n        }\r\n        throw error\r\n      }\r\n      // we have arrived at the input token, so this is the first trade of one of the paths\r\n      if (amountIn.currency.equals(tokenIn)) {\r\n        sortedInsert(\r\n          bestTrades,\r\n          new Trade(\r\n            new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency),\r\n            currencyAmountOut,\r\n            TradeType.EXACT_OUTPUT\r\n          ),\r\n          maxNumResults,\r\n          tradeComparator\r\n        )\r\n      } else if (maxHops > 1 && pairs.length > 1) {\r\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\r\n\r\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\r\n        Trade.bestTradeExactOut(\r\n          pairsExcludingThisPair,\r\n          currencyIn,\r\n          currencyAmountOut,\r\n          {\r\n            maxNumResults,\r\n            maxHops: maxHops - 1,\r\n          },\r\n          [pair, ...currentPairs],\r\n          amountIn,\r\n          bestTrades\r\n        )\r\n      }\r\n    }\r\n\r\n    return bestTrades\r\n  }\r\n}\r\n","import { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n","import JSBI from 'jsbi'\r\n\r\nimport { ONE, ZERO } from '../constants'\r\nimport { Rebase } from '../interfaces'\r\n\r\nexport function rebase(value: JSBI, from: JSBI, to: JSBI): JSBI {\r\n  return from ? JSBI.divide(JSBI.multiply(value, to), from) : ZERO\r\n}\r\n\r\nexport function toElastic(total: Rebase, base: JSBI, roundUp: boolean): JSBI {\r\n  let elastic: JSBI\r\n  if (JSBI.equal(total.base, ZERO)) {\r\n    elastic = base\r\n  } else {\r\n    elastic = JSBI.divide(JSBI.multiply(base, total.elastic), total.base)\r\n    if (roundUp && JSBI.lessThan(JSBI.divide(JSBI.multiply(elastic, total.base), total.elastic), base)) {\r\n      elastic = JSBI.add(elastic, ONE)\r\n    }\r\n  }\r\n\r\n  return elastic\r\n}\r\n","import { SOLIDITY_TYPE_MAXIMA, ZERO } from '../constants'\r\nimport { SolidityType } from '../enums'\r\n\r\nimport JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\r\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\r\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\r\n}\r\n","import { Currency } from './entities/Currency'\r\nimport { CurrencyAmount } from './entities/CurrencyAmount'\r\nimport { Percent } from './entities/Percent'\r\nimport { Token } from './entities/Token'\r\nimport { Trade } from './entities/Trade'\r\nimport { TradeType } from './enums/TradeType'\r\nimport invariant from 'tiny-invariant'\r\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\r\n\r\n/**\r\n * Options for producing the arguments to send call to the router.\r\n */\r\nexport interface TradeOptions {\r\n  /**\r\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\r\n   */\r\n  allowedSlippage: Percent\r\n  /**\r\n   * How long the swap is valid until it expires, in seconds.\r\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\r\n   * are generated.\r\n   */\r\n  ttl: number\r\n  /**\r\n   * The account that should receive the output of the swap.\r\n   */\r\n  recipient: string\r\n\r\n  /**\r\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\r\n   */\r\n  feeOnTransfer?: boolean\r\n}\r\n\r\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\r\n  /**\r\n   * When the transaction expires.\r\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\r\n   */\r\n  deadline: number\r\n}\r\n\r\n/**\r\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\r\n */\r\nexport interface SwapParameters {\r\n  /**\r\n   * The method to call on the Uniswap V2 Router.\r\n   */\r\n  methodName: string\r\n  /**\r\n   * The arguments to pass to the method, all hex encoded.\r\n   */\r\n  args: (string | string[])[]\r\n  /**\r\n   * The amount of wei to send in hex.\r\n   */\r\n  value: string\r\n}\r\n\r\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\r\n  return `0x${currencyAmount.quotient.toString(16)}`\r\n}\r\n\r\nconst ZERO_HEX = '0x0'\r\n\r\n/**\r\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\r\n */\r\nexport abstract class Router {\r\n  /**\r\n   * Cannot be constructed.\r\n   */\r\n  private constructor() {}\r\n\r\n  /**\r\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\r\n   * @param trade to produce call parameters for\r\n   * @param options options for the call parameters\r\n   */\r\n  public static swapCallParameters(\r\n    trade: Trade<Currency, Currency, TradeType>,\r\n    options: TradeOptions | TradeOptionsDeadline\r\n  ): SwapParameters {\r\n    const etherIn = trade.inputAmount.currency.isNative\r\n    const etherOut = trade.outputAmount.currency.isNative\r\n    // the router does not support both ether in and out\r\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\r\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\r\n\r\n    const to: string = validateAndParseAddress(options.recipient)\r\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\r\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\r\n    const path: string[] = trade.route.path.map((token: Token) => token.address)\r\n    const deadline =\r\n      'ttl' in options\r\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\r\n        : `0x${options.deadline.toString(16)}`\r\n\r\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\r\n\r\n    let methodName: string\r\n    let args: (string | string[])[]\r\n    let value: string\r\n    switch (trade.tradeType) {\r\n      case TradeType.EXACT_INPUT:\r\n        if (etherIn) {\r\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\r\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, path, to, deadline]\r\n          value = amountIn\r\n        } else if (etherOut) {\r\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\r\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n          args = [amountIn, amountOut, path, to, deadline]\r\n          value = ZERO_HEX\r\n        } else {\r\n          methodName = useFeeOnTransfer\r\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\r\n            : 'swapExactTokensForTokens'\r\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n          args = [amountIn, amountOut, path, to, deadline]\r\n          value = ZERO_HEX\r\n        }\r\n        break\r\n      case TradeType.EXACT_OUTPUT:\r\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\r\n        if (etherIn) {\r\n          methodName = 'swapETHForExactTokens'\r\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, path, to, deadline]\r\n          value = amountIn\r\n        } else if (etherOut) {\r\n          methodName = 'swapTokensForExactETH'\r\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, amountIn, path, to, deadline]\r\n          value = ZERO_HEX\r\n        } else {\r\n          methodName = 'swapTokensForExactTokens'\r\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, amountIn, path, to, deadline]\r\n          value = ZERO_HEX\r\n        }\r\n        break\r\n    }\r\n    return {\r\n      methodName,\r\n      args,\r\n      value,\r\n    }\r\n  }\r\n}\r\n"],"names":["ChainId","ChainKey","Rounding","SolidityType","TradeType","TradeVersion","SUSHI_ADDRESS","ETHEREUM","ROPSTEN","RINKEBY","GÖRLI","KOVAN","FANTOM","MATIC","XDAI","BSC","ARBITRUM","AVALANCHE","OPBNB","ZETA_TESTNET","HECO","HARMONY","OKEX","OKEX_TESTNET","PALM","PALM_TESTNET","MOONRIVER","CELO","TELOS","FUSE","MOONBEAM","KAVA","METIS","USDC_ADDRESS","MATIC_TESTNET","OPTIMISM","ARBITRUM_NOVA","USD_ADDRESS","WETH9_ADDRESS","ARBITRUM_TESTNET","WNATIVE_ADDRESS","FANTOM_TESTNET","BSC_TESTNET","MOONBEAM_TESTNET","AVALANCHE_TESTNET","HECO_TESTNET","HARMONY_TESTNET","BOBA_AVAX","DAI_ADDRESS","USDT_ADDRESS","MIM_ADDRESS","FRAX_ADDRESS","FACTORY_ADDRESS","ROUTER_ADDRESS","MASTERCHEF_ADDRESS","BAR_ADDRESS","MAKER_ADDRESS","TIMELOCK_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","SUSHISWAP_SWAPPER_ADDRESS","SUSHISWAP_MULTISWAPPER_ADDRESS","SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS","PEGGED_ORACLE_ADDRESS","SUSHISWAP_TWAP_0_ORACLE_ADDRESS","SUSHISWAP_TWAP_1_ORACLE_ADDRESS","CHAINLINK_ORACLE_ADDRESS","BORING_HELPER_ADDRESS","MINICHEF_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","BALANCE_FETCHER_ADDRESS","MULTISIG_ADDRESS","CHAIN_KEY","INIT_CODE_HASH","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","Token","equals","other","isToken","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","USDC","USD","WETH9","WNATIVE","SUSHI","Avalanche","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Movr","Okex","xDai","Palm","Fuse","Telos","Glmr","Kava","Metis","opBNB","Boba","zetaTestnet","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","MINIMUM_LIQUIDITY","SOLIDITY_TYPE_MAXIMA","uint8","uint256","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","toExact","serialize","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePairAddress","factoryAddress","tokenA","tokenB","token0","token1","getCreate2Address","keccak256","pack","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","minimum","lowest","i","LT","maximum","highest","GT","difference","a","b","Pair","currencyAmountA","currencyAmountB","currencyAmounts","liquidityToken","tokenAmounts","involvesToken","token","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","console","log","kLast","getLiquidityValue","feeOn","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","tradeComparator","ioComp","route","Trade","amount","tradeType","Array","EXACT_INPUT","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","getSigner","library","account","connectUnchecked","getProviderOrSigner","rebase","from","to","toElastic","total","base","roundUp","elastic","validateSolidityTypeInstance","solidityType","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","recipient","allowedSlippage","map","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName"],"mappings":"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"}